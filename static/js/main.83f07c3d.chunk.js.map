{"version":3,"sources":["components/PlanetsList.js","components/StarshipsList.js","components/FilmDetails.js","components/FilmsList.js","App.js","api.js","index.js"],"names":["PlanetsList","planets","map","item","name","created","StarshipsList","starships","FilmDetails","handleDetailsClose","episodeDetails","useState","setStarships","setPlanets","showShips","setShowShips","showPlanets","setShowPlanets","useEffect","Promise","all","starship","fetch","then","response","json","obj","prev","planet","episode_id","Card","bg","text","Body","Title","className","Button","style","width","variant","type","onClick","Text","director","opening_crawl","release_date","cursor","FilmsList","handleClickDetails","visibleFilms","Col","film","marginBottom","title","App","filmsList","setFilmsList","inputQuery","setInputQuery","setVisibleFilms","reverseOrder","setReverseORder","setEpisodeDetails","ok","Error","status","statusText","filmsFromServer","results","result","filter","toLowerCase","includes","toLocaleLowerCase","Container","fluid","Nav","expand","margin","placeholder","value","onChange","event","target","sort","a","b","localeCompare","Row","filmId","chosenFilm","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83f07c3d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const PlanetsList = ({ planets }) => (\n  <ul>\n    {planets.map(item => (\n      <li key={item.created}>\n        {item.name}\n      </li>\n    ))}\n  </ul>\n);\n\nPlanetsList.propTypes = {\n  planets: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const StarshipsList = ({ starships }) => (\n  <ul>\n    {starships.map(item => (\n      <li key={item.created}>\n        {item.name}\n      </li>\n    ))}\n  </ul>\n);\n\nStarshipsList.propTypes = {\n  starships: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { PlanetsList } from './PlanetsList';\nimport { StarshipsList } from './StarshipsList';\n\nexport const FilmDetails = ({ handleDetailsClose, episodeDetails }) => {\n  const [starships, setStarships] = useState([]);\n  const [planets, setPlanets] = useState([]);\n  const [showShips, setShowShips] = useState(false);\n  const [showPlanets, setShowPlanets] = useState(false);\n\n  const getStarships = () => {\n    Promise.all(episodeDetails.starships.map(starship => (\n      fetch(starship)\n        .then(response => response.json())\n        .then(obj => setStarships(prev => [...prev, obj])))));\n  };\n\n  const getPlanets = () => {\n    Promise.all(episodeDetails.planets.map(planet => (\n      fetch(planet)\n        .then(response => response.json())\n        .then(obj => setPlanets(prev => [...prev, obj])))));\n  };\n\n  const handleStarshipsList = () => {\n    setShowShips(prev => !prev);\n  };\n\n  const handlePlanetsList = () => {\n    setShowPlanets(prev => !prev);\n  };\n\n  useEffect(() => {\n    setShowShips(false);\n    setStarships([]);\n    setPlanets([]);\n    setShowPlanets(false);\n\n    getStarships();\n    getPlanets();\n  }, [episodeDetails.episode_id]);\n\n  return (\n    <Card\n      bg=\"secondary\"\n      text=\"white\"\n    >\n      <Card.Body>\n        <Card.Title className=\"text-right\">\n          <Button\n            style={{ width: '50px' }}\n            variant=\"dark\"\n            type=\"button\"\n            onClick={handleDetailsClose}\n          >\n            X\n          </Button>\n        </Card.Title>\n        <Card.Text>\n          Directed by\n          {episodeDetails.director}\n        </Card.Text>\n        <Card.Text>\n          Description:\n          <br />\n          {episodeDetails.opening_crawl}\n        </Card.Text>\n        <Card.Text>\n          Release date:\n          {episodeDetails.release_date}\n        </Card.Text>\n        <Card.Text\n          onClick={handleStarshipsList}\n          style={{ cursor: 'pointer' }}\n        >\n          Starships\n        </Card.Text>\n        {showShips && (\n          <StarshipsList starships={starships} />\n        )}\n        <Card.Text\n          onClick={handlePlanetsList}\n          style={{ cursor: 'pointer' }}\n        >\n          Planets\n        </Card.Text>\n        {showPlanets && (\n          <PlanetsList planets={planets} />\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nFilmDetails.propTypes = {\n  handleDetailsClose: PropTypes.func.isRequired,\n  episodeDetails: PropTypes.shape(PropTypes.object).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, Card } from 'react-bootstrap';\n\nexport const FilmsList = ({ handleClickDetails, visibleFilms }) => (\n  <Col>\n    {visibleFilms.map(film => (\n      <Card\n        style={{\n          marginBottom: '20px', cursor: 'pointer',\n        }}\n        key={film.episode_id}\n        onClick={() => {\n          handleClickDetails(film.episode_id);\n        }}\n      >\n        <Card.Body>\n          <Card.Title>{film.title}</Card.Title>\n          <Card.Text>{film.opening_crawl}</Card.Text>\n        </Card.Body>\n      </Card>\n    ))}\n  </Col>\n);\n\nFilmsList.propTypes = {\n  handleClickDetails: PropTypes.func.isRequired,\n  visibleFilms: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import { Container, Row, Col, Button, Nav } from 'react-bootstrap';\nimport React, { useState, useEffect } from 'react';\nimport { getAllFilms } from './api';\nimport { FilmDetails } from './components/FilmDetails';\nimport { FilmsList } from './components/FilmsList';\n\nconst App = () => {\n  const [filmsList, setFilmsList] = useState([]);\n  const [inputQuery, setInputQuery] = useState('');\n  const [visibleFilms, setVisibleFilms] = useState([]);\n  const [reverseOrder, setReverseORder] = useState(false);\n  const [episodeDetails, setEpisodeDetails] = useState(null);\n\n  useEffect(() => {\n    getAllFilms()\n      .then((filmsFromServer) => {\n        setFilmsList(filmsFromServer.results);\n        setVisibleFilms(filmsFromServer.results);\n      });\n  }, []);\n\n  useEffect(() => {\n    const result = filmsList.filter(film => (\n      film.title.toLowerCase().includes(inputQuery.toLocaleLowerCase())));\n\n    setVisibleFilms(result);\n  }, [inputQuery]);\n\n  const handleInput = (event) => {\n    setInputQuery(event.target.value);\n  };\n\n  const handleSort = () => {\n    setVisibleFilms(\n      [...visibleFilms].sort((a, b) => (reverseOrder\n        ? b.title.localeCompare(a.title)\n        : a.title.localeCompare(b.title))),\n    );\n    setReverseORder(prev => !prev);\n  };\n\n  const handleClickDetails = (filmId) => {\n    const chosenFilm = filmsList.find(film => film.episode_id === filmId);\n\n    setEpisodeDetails(chosenFilm);\n  };\n\n  const handleDetailsClose = () => {\n    setEpisodeDetails(null);\n  };\n\n  return (\n    <Container fluid>\n      <Nav\n        expand=\"lg\"\n        style={{ margin: '15px 0' }}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Search a film\"\n          value={inputQuery}\n          onChange={handleInput}\n        />\n        <Button\n          style={{ margin: '0 15px' }}\n          variant=\"secondary\"\n          type=\"button\"\n          onClick={handleSort}\n        >\n          {reverseOrder ? 'sort Z - A' : 'sort A - Z'}\n        </Button>\n      </Nav>\n      <Row>\n        <FilmsList\n          handleClickDetails={handleClickDetails}\n          visibleFilms={visibleFilms}\n        />\n        <Col>\n          {episodeDetails && (\n            <FilmDetails\n              handleDetailsClose={handleDetailsClose}\n              episodeDetails={episodeDetails}\n            />\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;\n","export const getAllFilms = () => fetch('https://swapi.dev/api/films/')\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}